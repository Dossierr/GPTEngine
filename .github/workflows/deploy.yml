name: üöÄ  Deployment
# Only trigger, when the build workflow succeeded
on:
  push:
    branches: [ "main" ]
permissions:
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_LIGHTSAIL_SERVICE_NAME: dossierr
  #AWS_LIGHTSAIL_SERVICE_NAME: ${{ secrets.AWS_SERVICE_NAME }}
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:

  gptengine:
    name: üåé building gptengine service
    runs-on: ubuntu-latest
    steps:
      - name: üóÇ  Getting code from Github
        uses: actions/checkout@v2
      - name: ‚öôÔ∏è  Updating to the latest versions
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: üè¢ Install Amazon Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl
      - name: ü§ê Log in to AWS Lightsail with Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: ü§ê Make envfile
          uses: SpicyPizza/create-envfile@v1.3
          with:
            envkey_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            envkey_S3_AWS_ACCESS_KEY_ID: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
            envkey_S3_AWS_SECRET_KEY: ${{ secrets.S3_AWS_SECRET_KEY }}
            envkey_REDIS_URL: ${{ secrets.REDIS_URL }}
            envkey_REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
            file_name: constants.py
            fail_on_empty: false
      - name: üê≥ Create a Docker Container for gptengine
        run: docker build -t gptengine:latest -f ./dockerfile .
      - name: üì¨ Upload gptengine image to AWS container register
        run: |
          service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
          aws lightsail push-container-image \
            --region ${{ env.AWS_REGION }} \
            --service-name ${service_name} \
            --label gptengine \
            --image gptengine:latest
      - name: =========== All done. Cleaning up ‚ôªÔ∏è  ===========
        run: ls